name: Sync with upstream
on:
  schedule:
    - cron: '0 */6 * * *' # Every 6 hours
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.check-tags.outputs.new_tag }}
      should_build: ${{ steps.check-tags.outputs.should_build }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Sync upstream
        run: |
          git remote add upstream https://github.com/CapSoftware/Cap.git
          git fetch upstream --tags
          git checkout main
          git merge upstream/main
          git push origin main
          
      - name: Check for new tags
        id: check-tags
        run: |
          # Get all upstream cap-v* tags
          git fetch upstream --tags
          
          # Get latest upstream tag
          LATEST_UPSTREAM=$(git tag -l "cap-v*" --sort=-version:refname | head -n1)
          echo "Latest upstream tag: $LATEST_UPSTREAM"
          
          # Check if we need to create a release for this tag
          if [ ! -z "$LATEST_UPSTREAM" ]; then
            # Check if we already have a release for this tag
            if gh release view "$LATEST_UPSTREAM" >/dev/null 2>&1; then
              echo "Release already exists for $LATEST_UPSTREAM"
              echo "should_build=false" >> $GITHUB_OUTPUT
            else
              echo "New tag found, need to build: $LATEST_UPSTREAM"
              echo "should_build=true" >> $GITHUB_OUTPUT
              echo "new_tag=$LATEST_UPSTREAM" >> $GITHUB_OUTPUT
              
              # Push the tag to our repo
              git push origin "$LATEST_UPSTREAM"
            fi
          else
            echo "No cap-v* tags found"
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trigger-build:
    needs: sync
    if: needs.sync.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Trigger build workflow
        run: |
          gh workflow run auto-build-release.yml --ref "${{ needs.sync.outputs.new_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 